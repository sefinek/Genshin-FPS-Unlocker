name: Add file hashes to release description

on:
  release:
    types: [published]

jobs:
  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release assets
        id: get_assets
        uses: actions/github-script@v5
        with:
          script: |
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.payload.release.tag_name,
            });
            return release.data.assets.map(asset => ({
              id: asset.id,
              name: asset.name,
              url: asset.url,
            }));

      - name: Download and calculate hashes
        id: hash_assets
        run: |
          mkdir assets
          cd assets
          HASHES=""
          for asset in ${{ toJson(steps.get_assets.outputs.result) }}; do
            ASSET_URL=$(echo $asset | jq -r '.url')
            ASSET_NAME=$(echo $asset | jq -r '.name')
            curl -L -H "Accept: application/octet-stream" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$ASSET_URL" --output "$ASSET_NAME"
            HASH=$(sha256sum "$ASSET_NAME" | awk '{ print $1 }')
            HASHES+="$ASSET_NAME: $HASH\n"
          done
          echo "HASHES=$HASHES" >> $GITHUB_ENV

      - name: Update release notes
        uses: actions/github-script@v5
        with:
          script: |
            const newBody = `${{ github.event.release.body }}\n### File Hashes\n${process.env.HASHES}`;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ github.event.release.id }},
              body: newBody,
            });
