name: Add file hashes to release description

on:
  release:
    types: [published]

jobs:
  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download release assets
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "${{ github.repository }}"
          version: "latest"
          file: "*"
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Calculate file hashes
        id: calculate_hashes
        run: |
          HASHES=""
          for FILE in *; do
            if [ -f "$FILE" ]; then
              HASH=$(sha256sum "$FILE" | awk '{ print $1 }')
              HASHES+="\n${FILE}: ${HASH}"
            fi
          done
          echo "::set-output name=hashes::${HASHES}"

      - name: Get release ID
        id: get_release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.payload.release.tag_name
            });
            return release.data.id;

      - name: Update release notes
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releaseId = ${{ steps.get_release.outputs.id }};
            const existingBody = "${{ github.event.release.body }}";
            const hashes = `${{ steps.calculate_hashes.outputs.hashes }}`;
            const newBody = `${existingBody}\n### File Hashes${hashes}`;
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: newBody
            });
